

# /home/nabil/webserver-linux/nginx/nginx.conf

# Defines the number of worker processes.
# Usually set to the number of CPU cores.
events {
    worker_connections 1024;
}

# The http block contains directives for HTTP servers.
http {
    # Include common MIME types.
    include /etc/nginx/mime.types;
    # Set default type for files.
    default_type application/octet-stream;

    # Log format.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Access log file.
    access_log /var/log/nginx/access.log main;
    # Error log file.
    error_log /var/log/nginx/error.log warn;

    # Sendfile improves performance by copying data directly between file descriptors.
    sendfile on;
    # tcp_nopush on; # Optimizes TCP packet sending.

    # Keep-alive timeout for connections.
    keepalive_timeout 65;

    # Define the backend server for proxying.
    # 'webserv' is the service name from docker-compose.yml,
    # and 8081 is the port your webserv application listens on.
    upstream webserv_backend {
        server webserv:8081;
    }

    # Server block defines a virtual server.
    server {
        # Listen on port 80 (inside the container).
        listen 80;
        # Server name for this virtual host.
        server_name localhost;

        # Location block for the root URL and all sub-paths.
        # This will proxy all requests to the webserv_backend.
        location / {
            proxy_pass http://webserv_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Removed 'root', 'index', and 'try_files' from here
            # to ensure all requests are proxied and not served as static files by Nginx.
        }

        # If you later want to serve specific static files directly from Nginx
        # (e.g., for an admin panel or specific assets), you would add
        # *separate* location blocks for those paths, for example:
        location /static/ {
            root /usr/share/nginx/html; # Nginx serves files from its own mounted 'html' directory
            try_files $uri $uri/ =404;
        }
    }
}

# # PERFECT 

# # /home/nabil/webserver-linux/nginx/nginx.conf

# # Defines the number of worker processes.
# # Usually set to the number of CPU cores.
# events {
#     worker_connections 1024;
# }

# # The http block contains directives for HTTP servers.
# http {
#     # Include common MIME types.
#     include /etc/nginx/mime.types;
#     # Set default type for files.
#     default_type application/octet-stream;

#     # Log format.
#     log_format main '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';

#     # Access log file.
#     access_log /var/log/nginx/access.log main;
#     # Error log file.
#     error_log /var/log/nginx/error.log warn;

#     # Sendfile improves performance by copying data directly between file descriptors.
#     sendfile on;
#     # tcp_nopush on; # Optimizes TCP packet sending.

#     # Keep-alive timeout for connections.
#     keepalive_timeout 65;

#     # Define the backend server for proxying.
#     # 'webserv' is the service name from docker-compose.yml,
#     # and 8081 is the port your webserv application listens on.
#     upstream webserv_backend {
#         server webserv:8081;
#     }

#     # Server block defines a virtual server.
#     server {
#         # Listen on port 80 (inside the container).
#         listen 80;
#         # Server name for this virtual host.
#         server_name localhost;

#         # Location block for the root URL.
#         # This will serve static files from Nginx's own /usr/share/nginx/html directory.
#         location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#             try_files $uri $uri/ =404;
#         }

#         # Location block for requests to /webserv/ (and its sub-paths).
#         # These requests will be proxied to your webserv backend.
#         location /webserv/ {
#             # This rewrite rule removes '/webserv/' from the URI before proxying.
#             # For example, '/webserv/ex01.html' becomes '/ex01.html' for the backend.
#             rewrite ^/webserv/(.*)$ /$1 break;

#             proxy_pass http://webserv_backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # You can add more location blocks here for other specific proxying needs.
#     }
# }